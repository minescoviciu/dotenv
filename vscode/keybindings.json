// Place your key bindings in this file to override the defaults
[
    {
        "key": "cmd+i",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.closeSidebar",
                "workbench.action.moveSideBarLeft",
                "composer.startComposerPrompt"
            ]
        },
    },
    // side bar
    {
        "key": "cmd+b",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.closeSidebar",
                "workbench.action.toggleAuxiliaryBar",
            ]
        },
        "when": "sideBarVisible && auxiliaryBarVisible"
    },
    {
        "key": "cmd+b",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.closeSidebar",
            ]
        },
        "when": "sideBarVisible && !auxiliaryBarVisible"
    },
    {
        "key": "cmd+b",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.toggleAuxiliaryBar",
                "workbench.action.moveSideBarRight",
                "workbench.action.toggleSidebarVisibility"
            ]
        },
        "when": "!sideBarVisible && auxiliaryBarVisible"
    },
    {
        "key": "cmd+b",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.moveSideBarRight",
                "workbench.action.toggleSidebarVisibility",
            ]
        },
        "when": "!sideBarVisible && !auxiliaryBarVisible"
    },
    // search
    {
        "key": "shift+cmd+f",
        "command": "workbench.action.findInFiles",
        "when": "sideBarVisible"
    },
    {
        "key": "shift+cmd+f",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.toggleAuxiliaryBar",
                "workbench.action.moveSideBarRight",
                "workbench.action.findInFiles"
            ]
        },
        "when": "!sideBarVisible && auxiliaryBarVisible"
    },
    {
        "key": "shift+cmd+f",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.moveSideBarRight",
                "workbench.action.findInFiles"
            ]
        },
        "when": "!sideBarVisible && !auxiliaryBarVisible"
    },
    
    // Simulate the ctrl+d, ctrl+u, etc
    {
        "key": "ctrl+b",
        "command": "runCommands",
        "args": {
          "commands": [
            { "command": "vscode-neovim.send", "args": "<C-b>" },
            { "command": "editorScroll", "args": { "to": "up", "by": "page" } }
          ]
        },
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+u",
        "command": "runCommands",
        "args": {
          "commands": [
            { "command": "vscode-neovim.send", "args": "<C-u>" },
            { "command": "editorScroll", "args": { "to": "up", "by": "halfPage" } }
          ]
        },
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+d",
        "command": "runCommands",
        "args": {
          "commands": [
            { "command": "vscode-neovim.send", "args": "<C-d>" },
            { "command": "editorScroll", "args": { "to": "down", "by": "halfPage" } }
          ]
        },
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+f",
        "command": "runCommands",
        "args": {
          "commands": [
            { "command": "vscode-neovim.send", "args": "<C-f>" },
            { "command": "editorScroll", "args": { "to": "down", "by": "page" } }
          ]
        },
        "when": "editorTextFocus"
      },

    {
        "key": "cmd+i",
        "command": "-composer.startComposerPrompt"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+i",
        "command": "-composer.toggleAllVsSingleChatContext",
        "when": "composerFocused && !editorTextFocus"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "shift+cmd+l",
        "command": "-lazygit-vscode.toggle"
    },
    {
        "key": "cmd+e",
        "command": "-actions.findWithSelection"
    },
    

    // test
     {
         "key": "cmd+d",
         "command": "list.find",
     },

     {
        "key": "escape",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.closeSidebar",
                "vscode-neovim.escape",
            ]
        },
        "when": "sideBarVisible"
    },

    {
        "key": "escape",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.closeSidebar",
                "workbench.action.toggleAuxiliaryBar",
                "vscode-neovim.escape",
            ]
        },
        "when": "auxiliaryBarVisible || chatInputHasFocus"
    },

    // Search shortcuts
    //  {
    //     "key": "escape",
    //     "command": "runCommands",
    //     "args": {
    //         "commands": [
    //             "workbench.action.closeSidebar",
    //             "vscode-neovim.escape",
    //         ]
    //     },
    //     "when": "searchViewletVisible"
    // },
    {
        
        "key": "enter",
        "command": "runCommands",
        "args": {
            "commands": [
                "list.select",
                "vscode-neovim.escape",
                "workbench.action.closeSidebar",
            ]
        },
        "when": "hasSearchResult && focusedView == 'workbench.view.search' && inputFocus"
    },
    {
        "key": "up",
        "command": "runCommands",
        "args": {
            "commands": [
                // "search.action.focusPreviousSearchResult",
                "search.action.focusSearchList",
                "list.focusUp",
                "workbench.action.findInFiles",
                "cursorDown"
                
            ]
        },
        // "when": "hasSearchResult && searchViewletVisible"
        "when": "hasSearchResult && focusedView == 'workbench.view.search' && inputFocus"
    },
    {
        "key": "down",
        "command": "runCommands",
        "args": {
            "commands": [
                "search.action.focusSearchList",
                "list.focusDown",
                "workbench.action.findInFiles",
                "cursorDown"
            ]
        },
        "when": "hasSearchResult && focusedView == 'workbench.view.search' && inputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "runCommands",
        "args": {
            "commands": [
                    "scrollLineUp",
                    "scrollLineUp",
                    "scrollLineUp",
                    "scrollLineUp",
                    "scrollLineUp",
            ]
        },
        "when": "hasSearchResult && focusedView == 'workbench.view.search' && inputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "runCommands",
        "args": {
            "commands": [
                    "scrollLineDown",
                    "scrollLineDown",
                    "scrollLineDown",
                    "scrollLineDown",
                    "scrollLineDown",
            ]
        },
        "when": "hasSearchResult && focusedView == 'workbench.view.search' && inputFocus"
    },
    
    {
        "key": "cmd+j",
        "command": "history.showNext",
        "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },
    {
        "key": "cmd+k",
        "command": "history.showPrevious",
        "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },

    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "down",
        "command": "-history.showNext",
        "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },
    {
        "key": "up",
        "command": "-history.showPrevious",
        "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },
    

    // ctrl ^
    {
        "key": "ctrl+6",
        "command": "-workbench.action.openEditorAtIndex6"
    },
    {
        "key": "ctrl+6",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
                "list.select"
            ]
        },
        "when": "!activeEditorGroupEmpty"
    },
    
    // EDITOR
    {
        "key": "cmd+l",
        "command": "-aichat.newchataction"
    },
    {
        "key": "cmd+l",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.closeSidebar",
                "workbench.action.moveSideBarLeft",
                "aichat.newchataction"
            ]
        },
    },
    {
        "key": "cmd+l",
        "command": "-composer.sendToAgent",
        "when": "editorHasPromptBar && editorPromptBarFocused"
    },
    {
        "key": "cmd+l",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.closeSidebar",
                "workbench.action.moveSideBarLeft",
                "composer.sendToAgent"
            ]
        },
        "when": "editorHasPromptBar && editorPromptBarFocused"
    }
]
